{"version":3,"file":"use-vega.cjs.development.js","sources":["../src/enums/GrammerType.ts","../src/helpers/view.ts","../src/hooks/useRefState.ts","../src/useVega.tsx"],"sourcesContent":["export enum GrammerType {\n  VEGA = 'vega',\n  VEGA_LITE = 'vega-lite',\n}\n","import {\n  View,\n  parse as vegaParse,\n  Config,\n  // Config,\n  // Spec\n} from 'vega'\nimport { compile as vlCompile, TopLevelSpec } from 'vega-lite'\nimport vegaTooltip from 'vega-tooltip'\nimport { MutableRefObject } from 'react'\nimport { GrammerType } from '../enums/GrammerType'\n// import invariant from 'tiny-invariant'\nconst DEFAULT_OPTIONS: ViewOptions = {\n  hover: true,\n  renderer: 'canvas',\n}\n\nexport type ViewOptions = ConstructorParameters<typeof View>[1]\n\nexport const updateVegaView = (\n  viewReference: MutableRefObject<HTMLDivElement | null>,\n  vlSpec?: TopLevelSpec,\n  /*vegaSpec?: Spec, vegaConfig: Config = {},*/ overrideOptions: ViewOptions = {},\n  grammer: GrammerType = GrammerType.VEGA_LITE\n) => {\n  if (!viewReference || !viewReference.current || !vlSpec) return\n  const opts: ViewOptions = {\n    ...DEFAULT_OPTIONS,\n    ...overrideOptions,\n    container: viewReference.current,\n  }\n  // vegaParse()\n  // const spec = vlSpec ? vlCompile(vlSpec).spec : vegaSpec\n  const spec =\n    grammer === GrammerType.VEGA_LITE ? vlCompile(vlSpec).spec : vlSpec\n  // invariant(!spec, 'Vega lite or vega spec must be defined')\n  // const config = vlSpec ? vlSpec.config : vegaConfig\n  // @ts-ignore\n  const runtime = vegaParse(spec, vlSpec.config as Config)\n  const view = new View(runtime, opts)\n  vegaTooltip(view)\n  return view\n}\n","import {\n  Dispatch,\n  MutableRefObject,\n  SetStateAction,\n  useCallback,\n  useRef,\n  useState,\n} from 'react'\n\nconst useRefState = <S>(\n  initialState: S | (() => S)\n): [MutableRefObject<S>, Dispatch<SetStateAction<S>>] => {\n  const [firstState, _setState] = useState<S>(initialState)\n  const latestState = useRef<S>(firstState)\n  const setState = useCallback((nextState) => {\n    latestState.current = nextState\n    _setState(nextState)\n  }, [])\n  return [latestState, setState]\n}\n\nexport default useRefState\n","import { useRef, useEffect, useCallback, useState } from 'react'\nimport { TopLevelSpec } from 'vega-lite'\nimport { Spec, UrlData, View } from 'vega'\nimport { updateVegaView, ViewOptions } from './helpers/view'\nimport useRefState from './hooks/useRefState'\nimport warning from 'tiny-warning'\nimport { InlineData, NamedData } from 'vega-lite/build/src/data'\nimport { GrammerType } from './enums/GrammerType'\n// import useForceUpdate from './hooks/useForceUpdate'\n\nconst isView = (view: View | null | undefined): view is View => {\n  return !!view && !!view?.addDataListener\n}\nconst safeUpdateView = (\n  visualization: React.MutableRefObject<View | null | undefined>,\n  ref: React.MutableRefObject<HTMLDivElement | null>,\n  spec: TopLevelSpec,\n  opts: ViewOptions = {},\n  grammer?: GrammerType\n) => {\n  let view: View | undefined = undefined\n  try {\n    view = updateVegaView(ref, spec, opts, grammer)\n  } catch (err) {\n    warning(true, err)\n    return err\n  }\n  if (isView(view)) {\n    visualization.current = view\n    return false\n  }\n  return new Error('Could not load view')\n}\n\nexport interface UseVegaOptions {\n  overrides?: ViewOptions\n  grammer?: GrammerType\n}\n\nconst validateData = (spec: Spec | TopLevelSpec) => {\n  return !!(\n    (spec.data && (spec.data as UrlData).url) ||\n    (!Array.isArray(spec?.data) && (spec?.data as InlineData).values) ||\n    (Array.isArray(spec?.data) &&\n      spec?.data.length > 0 &&\n      (spec?.data[0] as NamedData).name)\n  )\n}\nexport const useVega = (\n  initialSpec: TopLevelSpec | Spec,\n  opts?: UseVegaOptions\n) => {\n  const [vegaWrapperRef, setWrapperRef] = useRefState<HTMLDivElement | null>(\n    null\n  )\n  const currentSpec = useRef(initialSpec)\n  const visualization = useRef<View | undefined | null>(null)\n  // const forceUpdate = useForceUpdate()\n  const [isLoading, setLoading] = useRefState(true)\n  const [noData, setNoData] = useRefState(false)\n  const [error, setError] = useState(null)\n  const updateView = useCallback(\n    (spec) => {\n      if (!vegaWrapperRef) {\n        return\n      }\n      if (visualization.current) {\n        visualization.current.finalize()\n        visualization.current = null\n      }\n      const isValid = validateData(spec)\n      if (!isValid) {\n        setNoData(true)\n      } else {\n        const error = safeUpdateView(\n          visualization,\n          vegaWrapperRef,\n          spec,\n          opts ? opts.overrides : {},\n          opts?.grammer || GrammerType.VEGA_LITE\n        )\n        if (!error) {\n          setNoData(false)\n          setError(null)\n        } else {\n          setError(error)\n        }\n      }\n      setLoading(false)\n    },\n    [setLoading, vegaWrapperRef, opts, setNoData]\n  )\n\n  const updateContainer = useCallback(\n    (elementRef: HTMLDivElement) => {\n      if (!elementRef) {\n        return\n      }\n      setWrapperRef(elementRef)\n    },\n    [setWrapperRef]\n  )\n\n  useEffect(() => {\n    if (!vegaWrapperRef.current) {\n      return\n    }\n    updateView(currentSpec.current || initialSpec)\n    return () => {\n      if (visualization.current) {\n        visualization.current.finalize()\n      }\n    }\n  }, [vegaWrapperRef, initialSpec, updateView])\n\n  return {\n    ref: vegaWrapperRef,\n    view: visualization,\n    updateView,\n    isLoading: isLoading.current,\n    noData: noData.current,\n    error,\n    updateContainer,\n  }\n}\n"],"names":["GrammerType","DEFAULT_OPTIONS","hover","renderer","updateVegaView","viewReference","vlSpec","overrideOptions","grammer","VEGA_LITE","current","opts","container","spec","vlCompile","runtime","vegaParse","config","view","View","vegaTooltip","useRefState","initialState","useState","firstState","_setState","latestState","useRef","setState","useCallback","nextState","isView","addDataListener","safeUpdateView","visualization","ref","undefined","err","warning","Error","validateData","data","url","Array","isArray","values","length","name","useVega","initialSpec","vegaWrapperRef","setWrapperRef","currentSpec","isLoading","setLoading","noData","setNoData","error","setError","updateView","finalize","isValid","overrides","updateContainer","elementRef","useEffect"],"mappings":"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"}